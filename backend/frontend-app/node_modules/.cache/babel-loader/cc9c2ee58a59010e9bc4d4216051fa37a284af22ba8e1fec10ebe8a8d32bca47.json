{"ast":null,"code":"import _assertThisInitialized from \"C:/Users/hp/Downloads/video_player_uploader-master/backend/frontend-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _classCallCheck from \"C:/Users/hp/Downloads/video_player_uploader-master/backend/frontend-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/hp/Downloads/video_player_uploader-master/backend/frontend-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"C:/Users/hp/Downloads/video_player_uploader-master/backend/frontend-app/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/hp/Downloads/video_player_uploader-master/backend/frontend-app/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n/*! @name m3u8-parser @version 7.1.0 @license Apache-2.0 */\nimport Stream from '@videojs/vhs-utils/es/stream.js';\nimport _extends from '@babel/runtime/helpers/extends';\nimport decodeB64ToUint8Array from '@videojs/vhs-utils/es/decode-b64-to-uint8-array.js';\n\n/**\n * @file m3u8/line-stream.js\n */\n/**\n * A stream that buffers string input and generates a `data` event for each\n * line.\n *\n * @class LineStream\n * @extends Stream\n */\nvar LineStream = /*#__PURE__*/function (_Stream) {\n  _inherits(LineStream, _Stream);\n  var _super = _createSuper(LineStream);\n  function LineStream() {\n    var _this;\n    _classCallCheck(this, LineStream);\n    _this = _super.call(this);\n    _this.buffer = '';\n    return _this;\n  }\n  /**\n   * Add new data to be parsed.\n   *\n   * @param {string} data the text to process\n   */\n  _createClass(LineStream, [{\n    key: \"push\",\n    value: function push(data) {\n      var nextNewline;\n      this.buffer += data;\n      nextNewline = this.buffer.indexOf('\\n');\n      for (; nextNewline > -1; nextNewline = this.buffer.indexOf('\\n')) {\n        this.trigger('data', this.buffer.substring(0, nextNewline));\n        this.buffer = this.buffer.substring(nextNewline + 1);\n      }\n    }\n  }]);\n  return LineStream;\n}(Stream);\nvar TAB = String.fromCharCode(0x09);\nvar parseByterange = function parseByterange(byterangeString) {\n  // optionally match and capture 0+ digits before `@`\n  // optionally match and capture 0+ digits after `@`\n  var match = /([0-9.]*)?@?([0-9.]*)?/.exec(byterangeString || '');\n  var result = {};\n  if (match[1]) {\n    result.length = parseInt(match[1], 10);\n  }\n  if (match[2]) {\n    result.offset = parseInt(match[2], 10);\n  }\n  return result;\n};\n/**\n * \"forgiving\" attribute list psuedo-grammar:\n * attributes -> keyvalue (',' keyvalue)*\n * keyvalue   -> key '=' value\n * key        -> [^=]*\n * value      -> '\"' [^\"]* '\"' | [^,]*\n */\n\nvar attributeSeparator = function attributeSeparator() {\n  var key = '[^=]*';\n  var value = '\"[^\"]*\"|[^,]*';\n  var keyvalue = '(?:' + key + ')=(?:' + value + ')';\n  return new RegExp('(?:^|,)(' + keyvalue + ')');\n};\n/**\n * Parse attributes from a line given the separator\n *\n * @param {string} attributes the attribute line to parse\n */\n\nvar parseAttributes = function parseAttributes(attributes) {\n  var result = {};\n  if (!attributes) {\n    return result;\n  } // split the string using attributes as the separator\n\n  var attrs = attributes.split(attributeSeparator());\n  var i = attrs.length;\n  var attr;\n  while (i--) {\n    // filter out unmatched portions of the string\n    if (attrs[i] === '') {\n      continue;\n    } // split the key and value\n\n    attr = /([^=]*)=(.*)/.exec(attrs[i]).slice(1); // trim whitespace and remove optional quotes around the value\n\n    attr[0] = attr[0].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^['\"](.*)['\"]$/g, '$1');\n    result[attr[0]] = attr[1];\n  }\n  return result;\n};\n/**\n * A line-level M3U8 parser event stream. It expects to receive input one\n * line at a time and performs a context-free parse of its contents. A stream\n * interpretation of a manifest can be useful if the manifest is expected to\n * be too large to fit comfortably into memory or the entirety of the input\n * is not immediately available. Otherwise, it's probably much easier to work\n * with a regular `Parser` object.\n *\n * Produces `data` events with an object that captures the parser's\n * interpretation of the input. That object has a property `tag` that is one\n * of `uri`, `comment`, or `tag`. URIs only have a single additional\n * property, `line`, which captures the entirety of the input without\n * interpretation. Comments similarly have a single additional property\n * `text` which is the input without the leading `#`.\n *\n * Tags always have a property `tagType` which is the lower-cased version of\n * the M3U8 directive without the `#EXT` or `#EXT-X-` prefix. For instance,\n * `#EXT-X-MEDIA-SEQUENCE` becomes `media-sequence` when parsed. Unrecognized\n * tags are given the tag type `unknown` and a single additional property\n * `data` with the remainder of the input.\n *\n * @class ParseStream\n * @extends Stream\n */\nvar ParseStream = /*#__PURE__*/function (_Stream2) {\n  _inherits(ParseStream, _Stream2);\n  var _super2 = _createSuper(ParseStream);\n  function ParseStream() {\n    var _this2;\n    _classCallCheck(this, ParseStream);\n    _this2 = _super2.call(this);\n    _this2.customParsers = [];\n    _this2.tagMappers = [];\n    return _this2;\n  }\n  /**\n   * Parses an additional line of input.\n   *\n   * @param {string} line a single line of an M3U8 file to parse\n   */\n  _createClass(ParseStream, [{\n    key: \"push\",\n    value: function push(line) {\n      var _this3 = this;\n      var match;\n      var event; // strip whitespace\n\n      line = line.trim();\n      if (line.length === 0) {\n        // ignore empty lines\n        return;\n      } // URIs\n\n      if (line[0] !== '#') {\n        this.trigger('data', {\n          type: 'uri',\n          uri: line\n        });\n        return;\n      } // map tags\n\n      var newLines = this.tagMappers.reduce(function (acc, mapper) {\n        var mappedLine = mapper(line); // skip if unchanged\n\n        if (mappedLine === line) {\n          return acc;\n        }\n        return acc.concat([mappedLine]);\n      }, [line]);\n      newLines.forEach(function (newLine) {\n        for (var i = 0; i < _this3.customParsers.length; i++) {\n          if (_this3.customParsers[i].call(_this3, newLine)) {\n            return;\n          }\n        } // Comments\n\n        if (newLine.indexOf('#EXT') !== 0) {\n          _this3.trigger('data', {\n            type: 'comment',\n            text: newLine.slice(1)\n          });\n          return;\n        } // strip off any carriage returns here so the regex matching\n        // doesn't have to account for them.\n\n        newLine = newLine.replace('\\r', ''); // Tags\n\n        match = /^#EXTM3U/.exec(newLine);\n        if (match) {\n          _this3.trigger('data', {\n            type: 'tag',\n            tagType: 'm3u'\n          });\n          return;\n        }\n        match = /^#EXTINF:([0-9\\.]*)?,?(.*)?$/.exec(newLine);\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'inf'\n          };\n          if (match[1]) {\n            event.duration = parseFloat(match[1]);\n          }\n          if (match[2]) {\n            event.title = match[2];\n          }\n          _this3.trigger('data', event);\n          return;\n        }\n        match = /^#EXT-X-TARGETDURATION:([0-9.]*)?/.exec(newLine);\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'targetduration'\n          };\n          if (match[1]) {\n            event.duration = parseInt(match[1], 10);\n          }\n          _this3.trigger('data', event);\n          return;\n        }\n        match = /^#EXT-X-VERSION:([0-9.]*)?/.exec(newLine);\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'version'\n          };\n          if (match[1]) {\n            event.version = parseInt(match[1], 10);\n          }\n          _this3.trigger('data', event);\n          return;\n        }\n        match = /^#EXT-X-MEDIA-SEQUENCE:(\\-?[0-9.]*)?/.exec(newLine);\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'media-sequence'\n          };\n          if (match[1]) {\n            event.number = parseInt(match[1], 10);\n          }\n          _this3.trigger('data', event);\n          return;\n        }\n        match = /^#EXT-X-DISCONTINUITY-SEQUENCE:(\\-?[0-9.]*)?/.exec(newLine);\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'discontinuity-sequence'\n          };\n          if (match[1]) {\n            event.number = parseInt(match[1], 10);\n          }\n          _this3.trigger('data', event);\n          return;\n        }\n        match = /^#EXT-X-PLAYLIST-TYPE:(.*)?$/.exec(newLine);\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'playlist-type'\n          };\n          if (match[1]) {\n            event.playlistType = match[1];\n          }\n          _this3.trigger('data', event);\n          return;\n        }\n        match = /^#EXT-X-BYTERANGE:(.*)?$/.exec(newLine);\n        if (match) {\n          event = _extends(parseByterange(match[1]), {\n            type: 'tag',\n            tagType: 'byterange'\n          });\n          _this3.trigger('data', event);\n          return;\n        }\n        match = /^#EXT-X-ALLOW-CACHE:(YES|NO)?/.exec(newLine);\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'allow-cache'\n          };\n          if (match[1]) {\n            event.allowed = !/NO/.test(match[1]);\n          }\n          _this3.trigger('data', event);\n          return;\n        }\n        match = /^#EXT-X-MAP:(.*)$/.exec(newLine);\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'map'\n          };\n          if (match[1]) {\n            var attributes = parseAttributes(match[1]);\n            if (attributes.URI) {\n              event.uri = attributes.URI;\n            }\n            if (attributes.BYTERANGE) {\n              event.byterange = parseByterange(attributes.BYTERANGE);\n            }\n          }\n          _this3.trigger('data', event);\n          return;\n        }\n        match = /^#EXT-X-STREAM-INF:(.*)$/.exec(newLine);\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'stream-inf'\n          };\n          if (match[1]) {\n            event.attributes = parseAttributes(match[1]);\n            if (event.attributes.RESOLUTION) {\n              var split = event.attributes.RESOLUTION.split('x');\n              var resolution = {};\n              if (split[0]) {\n                resolution.width = parseInt(split[0], 10);\n              }\n              if (split[1]) {\n                resolution.height = parseInt(split[1], 10);\n              }\n              event.attributes.RESOLUTION = resolution;\n            }\n            if (event.attributes.BANDWIDTH) {\n              event.attributes.BANDWIDTH = parseInt(event.attributes.BANDWIDTH, 10);\n            }\n            if (event.attributes['FRAME-RATE']) {\n              event.attributes['FRAME-RATE'] = parseFloat(event.attributes['FRAME-RATE']);\n            }\n            if (event.attributes['PROGRAM-ID']) {\n              event.attributes['PROGRAM-ID'] = parseInt(event.attributes['PROGRAM-ID'], 10);\n            }\n          }\n          _this3.trigger('data', event);\n          return;\n        }\n        match = /^#EXT-X-MEDIA:(.*)$/.exec(newLine);\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'media'\n          };\n          if (match[1]) {\n            event.attributes = parseAttributes(match[1]);\n          }\n          _this3.trigger('data', event);\n          return;\n        }\n        match = /^#EXT-X-ENDLIST/.exec(newLine);\n        if (match) {\n          _this3.trigger('data', {\n            type: 'tag',\n            tagType: 'endlist'\n          });\n          return;\n        }\n        match = /^#EXT-X-DISCONTINUITY/.exec(newLine);\n        if (match) {\n          _this3.trigger('data', {\n            type: 'tag',\n            tagType: 'discontinuity'\n          });\n          return;\n        }\n        match = /^#EXT-X-PROGRAM-DATE-TIME:(.*)$/.exec(newLine);\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'program-date-time'\n          };\n          if (match[1]) {\n            event.dateTimeString = match[1];\n            event.dateTimeObject = new Date(match[1]);\n          }\n          _this3.trigger('data', event);\n          return;\n        }\n        match = /^#EXT-X-KEY:(.*)$/.exec(newLine);\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'key'\n          };\n          if (match[1]) {\n            event.attributes = parseAttributes(match[1]); // parse the IV string into a Uint32Array\n\n            if (event.attributes.IV) {\n              if (event.attributes.IV.substring(0, 2).toLowerCase() === '0x') {\n                event.attributes.IV = event.attributes.IV.substring(2);\n              }\n              event.attributes.IV = event.attributes.IV.match(/.{8}/g);\n              event.attributes.IV[0] = parseInt(event.attributes.IV[0], 16);\n              event.attributes.IV[1] = parseInt(event.attributes.IV[1], 16);\n              event.attributes.IV[2] = parseInt(event.attributes.IV[2], 16);\n              event.attributes.IV[3] = parseInt(event.attributes.IV[3], 16);\n              event.attributes.IV = new Uint32Array(event.attributes.IV);\n            }\n          }\n          _this3.trigger('data', event);\n          return;\n        }\n        match = /^#EXT-X-START:(.*)$/.exec(newLine);\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'start'\n          };\n          if (match[1]) {\n            event.attributes = parseAttributes(match[1]);\n            event.attributes['TIME-OFFSET'] = parseFloat(event.attributes['TIME-OFFSET']);\n            event.attributes.PRECISE = /YES/.test(event.attributes.PRECISE);\n          }\n          _this3.trigger('data', event);\n          return;\n        }\n        match = /^#EXT-X-CUE-OUT-CONT:(.*)?$/.exec(newLine);\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'cue-out-cont'\n          };\n          if (match[1]) {\n            event.data = match[1];\n          } else {\n            event.data = '';\n          }\n          _this3.trigger('data', event);\n          return;\n        }\n        match = /^#EXT-X-CUE-OUT:(.*)?$/.exec(newLine);\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'cue-out'\n          };\n          if (match[1]) {\n            event.data = match[1];\n          } else {\n            event.data = '';\n          }\n          _this3.trigger('data', event);\n          return;\n        }\n        match = /^#EXT-X-CUE-IN:(.*)?$/.exec(newLine);\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'cue-in'\n          };\n          if (match[1]) {\n            event.data = match[1];\n          } else {\n            event.data = '';\n          }\n          _this3.trigger('data', event);\n          return;\n        }\n        match = /^#EXT-X-SKIP:(.*)$/.exec(newLine);\n        if (match && match[1]) {\n          event = {\n            type: 'tag',\n            tagType: 'skip'\n          };\n          event.attributes = parseAttributes(match[1]);\n          if (event.attributes.hasOwnProperty('SKIPPED-SEGMENTS')) {\n            event.attributes['SKIPPED-SEGMENTS'] = parseInt(event.attributes['SKIPPED-SEGMENTS'], 10);\n          }\n          if (event.attributes.hasOwnProperty('RECENTLY-REMOVED-DATERANGES')) {\n            event.attributes['RECENTLY-REMOVED-DATERANGES'] = event.attributes['RECENTLY-REMOVED-DATERANGES'].split(TAB);\n          }\n          _this3.trigger('data', event);\n          return;\n        }\n        match = /^#EXT-X-PART:(.*)$/.exec(newLine);\n        if (match && match[1]) {\n          event = {\n            type: 'tag',\n            tagType: 'part'\n          };\n          event.attributes = parseAttributes(match[1]);\n          ['DURATION'].forEach(function (key) {\n            if (event.attributes.hasOwnProperty(key)) {\n              event.attributes[key] = parseFloat(event.attributes[key]);\n            }\n          });\n          ['INDEPENDENT', 'GAP'].forEach(function (key) {\n            if (event.attributes.hasOwnProperty(key)) {\n              event.attributes[key] = /YES/.test(event.attributes[key]);\n            }\n          });\n          if (event.attributes.hasOwnProperty('BYTERANGE')) {\n            event.attributes.byterange = parseByterange(event.attributes.BYTERANGE);\n          }\n          _this3.trigger('data', event);\n          return;\n        }\n        match = /^#EXT-X-SERVER-CONTROL:(.*)$/.exec(newLine);\n        if (match && match[1]) {\n          event = {\n            type: 'tag',\n            tagType: 'server-control'\n          };\n          event.attributes = parseAttributes(match[1]);\n          ['CAN-SKIP-UNTIL', 'PART-HOLD-BACK', 'HOLD-BACK'].forEach(function (key) {\n            if (event.attributes.hasOwnProperty(key)) {\n              event.attributes[key] = parseFloat(event.attributes[key]);\n            }\n          });\n          ['CAN-SKIP-DATERANGES', 'CAN-BLOCK-RELOAD'].forEach(function (key) {\n            if (event.attributes.hasOwnProperty(key)) {\n              event.attributes[key] = /YES/.test(event.attributes[key]);\n            }\n          });\n          _this3.trigger('data', event);\n          return;\n        }\n        match = /^#EXT-X-PART-INF:(.*)$/.exec(newLine);\n        if (match && match[1]) {\n          event = {\n            type: 'tag',\n            tagType: 'part-inf'\n          };\n          event.attributes = parseAttributes(match[1]);\n          ['PART-TARGET'].forEach(function (key) {\n            if (event.attributes.hasOwnProperty(key)) {\n              event.attributes[key] = parseFloat(event.attributes[key]);\n            }\n          });\n          _this3.trigger('data', event);\n          return;\n        }\n        match = /^#EXT-X-PRELOAD-HINT:(.*)$/.exec(newLine);\n        if (match && match[1]) {\n          event = {\n            type: 'tag',\n            tagType: 'preload-hint'\n          };\n          event.attributes = parseAttributes(match[1]);\n          ['BYTERANGE-START', 'BYTERANGE-LENGTH'].forEach(function (key) {\n            if (event.attributes.hasOwnProperty(key)) {\n              event.attributes[key] = parseInt(event.attributes[key], 10);\n              var subkey = key === 'BYTERANGE-LENGTH' ? 'length' : 'offset';\n              event.attributes.byterange = event.attributes.byterange || {};\n              event.attributes.byterange[subkey] = event.attributes[key]; // only keep the parsed byterange object.\n\n              delete event.attributes[key];\n            }\n          });\n          _this3.trigger('data', event);\n          return;\n        }\n        match = /^#EXT-X-RENDITION-REPORT:(.*)$/.exec(newLine);\n        if (match && match[1]) {\n          event = {\n            type: 'tag',\n            tagType: 'rendition-report'\n          };\n          event.attributes = parseAttributes(match[1]);\n          ['LAST-MSN', 'LAST-PART'].forEach(function (key) {\n            if (event.attributes.hasOwnProperty(key)) {\n              event.attributes[key] = parseInt(event.attributes[key], 10);\n            }\n          });\n          _this3.trigger('data', event);\n          return;\n        }\n        match = /^#EXT-X-DATERANGE:(.*)$/.exec(newLine);\n        if (match && match[1]) {\n          event = {\n            type: 'tag',\n            tagType: 'daterange'\n          };\n          event.attributes = parseAttributes(match[1]);\n          ['ID', 'CLASS'].forEach(function (key) {\n            if (event.attributes.hasOwnProperty(key)) {\n              event.attributes[key] = String(event.attributes[key]);\n            }\n          });\n          ['START-DATE', 'END-DATE'].forEach(function (key) {\n            if (event.attributes.hasOwnProperty(key)) {\n              event.attributes[key] = new Date(event.attributes[key]);\n            }\n          });\n          ['DURATION', 'PLANNED-DURATION'].forEach(function (key) {\n            if (event.attributes.hasOwnProperty(key)) {\n              event.attributes[key] = parseFloat(event.attributes[key]);\n            }\n          });\n          ['END-ON-NEXT'].forEach(function (key) {\n            if (event.attributes.hasOwnProperty(key)) {\n              event.attributes[key] = /YES/i.test(event.attributes[key]);\n            }\n          });\n          ['SCTE35-CMD', ' SCTE35-OUT', 'SCTE35-IN'].forEach(function (key) {\n            if (event.attributes.hasOwnProperty(key)) {\n              event.attributes[key] = event.attributes[key].toString(16);\n            }\n          });\n          var clientAttributePattern = /^X-([A-Z]+-)+[A-Z]+$/;\n          for (var key in event.attributes) {\n            if (!clientAttributePattern.test(key)) {\n              continue;\n            }\n            var isHexaDecimal = /[0-9A-Fa-f]{6}/g.test(event.attributes[key]);\n            var isDecimalFloating = /^\\d+(\\.\\d+)?$/.test(event.attributes[key]);\n            event.attributes[key] = isHexaDecimal ? event.attributes[key].toString(16) : isDecimalFloating ? parseFloat(event.attributes[key]) : String(event.attributes[key]);\n          }\n          _this3.trigger('data', event);\n          return;\n        }\n        match = /^#EXT-X-INDEPENDENT-SEGMENTS/.exec(newLine);\n        if (match) {\n          _this3.trigger('data', {\n            type: 'tag',\n            tagType: 'independent-segments'\n          });\n          return;\n        }\n        match = /^#EXT-X-CONTENT-STEERING:(.*)$/.exec(newLine);\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'content-steering'\n          };\n          event.attributes = parseAttributes(match[1]);\n          _this3.trigger('data', event);\n          return;\n        } // unknown tag type\n\n        _this3.trigger('data', {\n          type: 'tag',\n          data: newLine.slice(4)\n        });\n      });\n    }\n    /**\n     * Add a parser for custom headers\n     *\n     * @param {Object}   options              a map of options for the added parser\n     * @param {RegExp}   options.expression   a regular expression to match the custom header\n     * @param {string}   options.customType   the custom type to register to the output\n     * @param {Function} [options.dataParser] function to parse the line into an object\n     * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n     */\n  }, {\n    key: \"addParser\",\n    value: function addParser(_ref) {\n      var _this4 = this;\n      var expression = _ref.expression,\n        customType = _ref.customType,\n        dataParser = _ref.dataParser,\n        segment = _ref.segment;\n      if (typeof dataParser !== 'function') {\n        dataParser = function dataParser(line) {\n          return line;\n        };\n      }\n      this.customParsers.push(function (line) {\n        var match = expression.exec(line);\n        if (match) {\n          _this4.trigger('data', {\n            type: 'custom',\n            data: dataParser(line),\n            customType: customType,\n            segment: segment\n          });\n          return true;\n        }\n      });\n    }\n    /**\n     * Add a custom header mapper\n     *\n     * @param {Object}   options\n     * @param {RegExp}   options.expression   a regular expression to match the custom header\n     * @param {Function} options.map          function to translate tag into a different tag\n     */\n  }, {\n    key: \"addTagMapper\",\n    value: function addTagMapper(_ref2) {\n      var expression = _ref2.expression,\n        map = _ref2.map;\n      var mapFn = function mapFn(line) {\n        if (expression.test(line)) {\n          return map(line);\n        }\n        return line;\n      };\n      this.tagMappers.push(mapFn);\n    }\n  }]);\n  return ParseStream;\n}(Stream);\nvar camelCase = function camelCase(str) {\n  return str.toLowerCase().replace(/-(\\w)/g, function (a) {\n    return a[1].toUpperCase();\n  });\n};\nvar camelCaseKeys = function camelCaseKeys(attributes) {\n  var result = {};\n  Object.keys(attributes).forEach(function (key) {\n    result[camelCase(key)] = attributes[key];\n  });\n  return result;\n}; // set SERVER-CONTROL hold back based upon targetDuration and partTargetDuration\n// we need this helper because defaults are based upon targetDuration and\n// partTargetDuration being set, but they may not be if SERVER-CONTROL appears before\n// target durations are set.\n\nvar setHoldBack = function setHoldBack(manifest) {\n  var serverControl = manifest.serverControl,\n    targetDuration = manifest.targetDuration,\n    partTargetDuration = manifest.partTargetDuration;\n  if (!serverControl) {\n    return;\n  }\n  var tag = '#EXT-X-SERVER-CONTROL';\n  var hb = 'holdBack';\n  var phb = 'partHoldBack';\n  var minTargetDuration = targetDuration && targetDuration * 3;\n  var minPartDuration = partTargetDuration && partTargetDuration * 2;\n  if (targetDuration && !serverControl.hasOwnProperty(hb)) {\n    serverControl[hb] = minTargetDuration;\n    this.trigger('info', {\n      message: \"\".concat(tag, \" defaulting HOLD-BACK to targetDuration * 3 (\").concat(minTargetDuration, \").\")\n    });\n  }\n  if (minTargetDuration && serverControl[hb] < minTargetDuration) {\n    this.trigger('warn', {\n      message: \"\".concat(tag, \" clamping HOLD-BACK (\").concat(serverControl[hb], \") to targetDuration * 3 (\").concat(minTargetDuration, \")\")\n    });\n    serverControl[hb] = minTargetDuration;\n  } // default no part hold back to part target duration * 3\n\n  if (partTargetDuration && !serverControl.hasOwnProperty(phb)) {\n    serverControl[phb] = partTargetDuration * 3;\n    this.trigger('info', {\n      message: \"\".concat(tag, \" defaulting PART-HOLD-BACK to partTargetDuration * 3 (\").concat(serverControl[phb], \").\")\n    });\n  } // if part hold back is too small default it to part target duration * 2\n\n  if (partTargetDuration && serverControl[phb] < minPartDuration) {\n    this.trigger('warn', {\n      message: \"\".concat(tag, \" clamping PART-HOLD-BACK (\").concat(serverControl[phb], \") to partTargetDuration * 2 (\").concat(minPartDuration, \").\")\n    });\n    serverControl[phb] = minPartDuration;\n  }\n};\n/**\n * A parser for M3U8 files. The current interpretation of the input is\n * exposed as a property `manifest` on parser objects. It's just two lines to\n * create and parse a manifest once you have the contents available as a string:\n *\n * ```js\n * var parser = new m3u8.Parser();\n * parser.push(xhr.responseText);\n * ```\n *\n * New input can later be applied to update the manifest object by calling\n * `push` again.\n *\n * The parser attempts to create a usable manifest object even if the\n * underlying input is somewhat nonsensical. It emits `info` and `warning`\n * events during the parse if it encounters input that seems invalid or\n * requires some property of the manifest object to be defaulted.\n *\n * @class Parser\n * @extends Stream\n */\nvar Parser = /*#__PURE__*/function (_Stream3) {\n  _inherits(Parser, _Stream3);\n  var _super3 = _createSuper(Parser);\n  function Parser() {\n    var _this5;\n    _classCallCheck(this, Parser);\n    _this5 = _super3.call(this);\n    _this5.lineStream = new LineStream();\n    _this5.parseStream = new ParseStream();\n    _this5.lineStream.pipe(_this5.parseStream);\n    _this5.lastProgramDateTime = null;\n    /* eslint-disable consistent-this */\n\n    var self = _assertThisInitialized(_this5);\n    /* eslint-enable consistent-this */\n\n    var uris = [];\n    var currentUri = {}; // if specified, the active EXT-X-MAP definition\n\n    var currentMap; // if specified, the active decryption key\n\n    var _key;\n    var hasParts = false;\n    var noop = function noop() {};\n    var defaultMediaGroups = {\n      'AUDIO': {},\n      'VIDEO': {},\n      'CLOSED-CAPTIONS': {},\n      'SUBTITLES': {}\n    }; // This is the Widevine UUID from DASH IF IOP. The same exact string is\n    // used in MPDs with Widevine encrypted streams.\n\n    var widevineUuid = 'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed'; // group segments into numbered timelines delineated by discontinuities\n\n    var currentTimeline = 0; // the manifest is empty until the parse stream begins delivering data\n\n    _this5.manifest = {\n      allowCache: true,\n      discontinuityStarts: [],\n      dateRanges: [],\n      segments: []\n    }; // keep track of the last seen segment's byte range end, as segments are not required\n    // to provide the offset, in which case it defaults to the next byte after the\n    // previous segment\n\n    var lastByterangeEnd = 0; // keep track of the last seen part's byte range end.\n\n    var lastPartByterangeEnd = 0;\n    var dateRangeTags = {};\n    _this5.on('end', function () {\n      // only add preloadSegment if we don't yet have a uri for it.\n      // and we actually have parts/preloadHints\n      if (currentUri.uri || !currentUri.parts && !currentUri.preloadHints) {\n        return;\n      }\n      if (!currentUri.map && currentMap) {\n        currentUri.map = currentMap;\n      }\n      if (!currentUri.key && _key) {\n        currentUri.key = _key;\n      }\n      if (!currentUri.timeline && typeof currentTimeline === 'number') {\n        currentUri.timeline = currentTimeline;\n      }\n      _this5.manifest.preloadSegment = currentUri;\n    }); // update the manifest with the m3u8 entry from the parse stream\n\n    _this5.parseStream.on('data', function (entry) {\n      var mediaGroup;\n      var rendition;\n      ({\n        tag: function tag() {\n          // switch based on the tag type\n          (({\n            version: function version() {\n              if (entry.version) {\n                this.manifest.version = entry.version;\n              }\n            },\n            'allow-cache': function allowCache() {\n              this.manifest.allowCache = entry.allowed;\n              if (!('allowed' in entry)) {\n                this.trigger('info', {\n                  message: 'defaulting allowCache to YES'\n                });\n                this.manifest.allowCache = true;\n              }\n            },\n            byterange: function byterange() {\n              var byterange = {};\n              if ('length' in entry) {\n                currentUri.byterange = byterange;\n                byterange.length = entry.length;\n                if (!('offset' in entry)) {\n                  /*\n                   * From the latest spec (as of this writing):\n                   * https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.2.2\n                   *\n                   * Same text since EXT-X-BYTERANGE's introduction in draft 7:\n                   * https://tools.ietf.org/html/draft-pantos-http-live-streaming-07#section-3.3.1)\n                   *\n                   * \"If o [offset] is not present, the sub-range begins at the next byte\n                   * following the sub-range of the previous media segment.\"\n                   */\n                  entry.offset = lastByterangeEnd;\n                }\n              }\n              if ('offset' in entry) {\n                currentUri.byterange = byterange;\n                byterange.offset = entry.offset;\n              }\n              lastByterangeEnd = byterange.offset + byterange.length;\n            },\n            endlist: function endlist() {\n              this.manifest.endList = true;\n            },\n            inf: function inf() {\n              if (!('mediaSequence' in this.manifest)) {\n                this.manifest.mediaSequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting media sequence to zero'\n                });\n              }\n              if (!('discontinuitySequence' in this.manifest)) {\n                this.manifest.discontinuitySequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting discontinuity sequence to zero'\n                });\n              }\n              if (entry.title) {\n                currentUri.title = entry.title;\n              }\n              if (entry.duration > 0) {\n                currentUri.duration = entry.duration;\n              }\n              if (entry.duration === 0) {\n                currentUri.duration = 0.01;\n                this.trigger('info', {\n                  message: 'updating zero segment duration to a small value'\n                });\n              }\n              this.manifest.segments = uris;\n            },\n            key: function key() {\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without attribute list'\n                });\n                return;\n              } // clear the active encryption key\n\n              if (entry.attributes.METHOD === 'NONE') {\n                _key = null;\n                return;\n              }\n              if (!entry.attributes.URI) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without URI'\n                });\n                return;\n              }\n              if (entry.attributes.KEYFORMAT === 'com.apple.streamingkeydelivery') {\n                this.manifest.contentProtection = this.manifest.contentProtection || {}; // TODO: add full support for this.\n\n                this.manifest.contentProtection['com.apple.fps.1_0'] = {\n                  attributes: entry.attributes\n                };\n                return;\n              }\n              if (entry.attributes.KEYFORMAT === 'com.microsoft.playready') {\n                this.manifest.contentProtection = this.manifest.contentProtection || {}; // TODO: add full support for this.\n\n                this.manifest.contentProtection['com.microsoft.playready'] = {\n                  uri: entry.attributes.URI\n                };\n                return;\n              } // check if the content is encrypted for Widevine\n              // Widevine/HLS spec: https://storage.googleapis.com/wvdocs/Widevine_DRM_HLS.pdf\n\n              if (entry.attributes.KEYFORMAT === widevineUuid) {\n                var VALID_METHODS = ['SAMPLE-AES', 'SAMPLE-AES-CTR', 'SAMPLE-AES-CENC'];\n                if (VALID_METHODS.indexOf(entry.attributes.METHOD) === -1) {\n                  this.trigger('warn', {\n                    message: 'invalid key method provided for Widevine'\n                  });\n                  return;\n                }\n                if (entry.attributes.METHOD === 'SAMPLE-AES-CENC') {\n                  this.trigger('warn', {\n                    message: 'SAMPLE-AES-CENC is deprecated, please use SAMPLE-AES-CTR instead'\n                  });\n                }\n                if (entry.attributes.URI.substring(0, 23) !== 'data:text/plain;base64,') {\n                  this.trigger('warn', {\n                    message: 'invalid key URI provided for Widevine'\n                  });\n                  return;\n                }\n                if (!(entry.attributes.KEYID && entry.attributes.KEYID.substring(0, 2) === '0x')) {\n                  this.trigger('warn', {\n                    message: 'invalid key ID provided for Widevine'\n                  });\n                  return;\n                } // if Widevine key attributes are valid, store them as `contentProtection`\n                // on the manifest to emulate Widevine tag structure in a DASH mpd\n\n                this.manifest.contentProtection = this.manifest.contentProtection || {};\n                this.manifest.contentProtection['com.widevine.alpha'] = {\n                  attributes: {\n                    schemeIdUri: entry.attributes.KEYFORMAT,\n                    // remove '0x' from the key id string\n                    keyId: entry.attributes.KEYID.substring(2)\n                  },\n                  // decode the base64-encoded PSSH box\n                  pssh: decodeB64ToUint8Array(entry.attributes.URI.split(',')[1])\n                };\n                return;\n              }\n              if (!entry.attributes.METHOD) {\n                this.trigger('warn', {\n                  message: 'defaulting key method to AES-128'\n                });\n              } // setup an encryption key for upcoming segments\n\n              _key = {\n                method: entry.attributes.METHOD || 'AES-128',\n                uri: entry.attributes.URI\n              };\n              if (typeof entry.attributes.IV !== 'undefined') {\n                _key.iv = entry.attributes.IV;\n              }\n            },\n            'media-sequence': function mediaSequence() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid media sequence: ' + entry.number\n                });\n                return;\n              }\n              this.manifest.mediaSequence = entry.number;\n            },\n            'discontinuity-sequence': function discontinuitySequence() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid discontinuity sequence: ' + entry.number\n                });\n                return;\n              }\n              this.manifest.discontinuitySequence = entry.number;\n              currentTimeline = entry.number;\n            },\n            'playlist-type': function playlistType() {\n              if (!/VOD|EVENT/.test(entry.playlistType)) {\n                this.trigger('warn', {\n                  message: 'ignoring unknown playlist type: ' + entry.playlist\n                });\n                return;\n              }\n              this.manifest.playlistType = entry.playlistType;\n            },\n            map: function map() {\n              currentMap = {};\n              if (entry.uri) {\n                currentMap.uri = entry.uri;\n              }\n              if (entry.byterange) {\n                currentMap.byterange = entry.byterange;\n              }\n              if (_key) {\n                currentMap.key = _key;\n              }\n            },\n            'stream-inf': function streamInf() {\n              this.manifest.playlists = uris;\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring empty stream-inf attributes'\n                });\n                return;\n              }\n              if (!currentUri.attributes) {\n                currentUri.attributes = {};\n              }\n              _extends(currentUri.attributes, entry.attributes);\n            },\n            media: function media() {\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n              if (!(entry.attributes && entry.attributes.TYPE && entry.attributes['GROUP-ID'] && entry.attributes.NAME)) {\n                this.trigger('warn', {\n                  message: 'ignoring incomplete or missing media group'\n                });\n                return;\n              } // find the media group, creating defaults as necessary\n\n              var mediaGroupType = this.manifest.mediaGroups[entry.attributes.TYPE];\n              mediaGroupType[entry.attributes['GROUP-ID']] = mediaGroupType[entry.attributes['GROUP-ID']] || {};\n              mediaGroup = mediaGroupType[entry.attributes['GROUP-ID']]; // collect the rendition metadata\n\n              rendition = {\n                default: /yes/i.test(entry.attributes.DEFAULT)\n              };\n              if (rendition.default) {\n                rendition.autoselect = true;\n              } else {\n                rendition.autoselect = /yes/i.test(entry.attributes.AUTOSELECT);\n              }\n              if (entry.attributes.LANGUAGE) {\n                rendition.language = entry.attributes.LANGUAGE;\n              }\n              if (entry.attributes.URI) {\n                rendition.uri = entry.attributes.URI;\n              }\n              if (entry.attributes['INSTREAM-ID']) {\n                rendition.instreamId = entry.attributes['INSTREAM-ID'];\n              }\n              if (entry.attributes.CHARACTERISTICS) {\n                rendition.characteristics = entry.attributes.CHARACTERISTICS;\n              }\n              if (entry.attributes.FORCED) {\n                rendition.forced = /yes/i.test(entry.attributes.FORCED);\n              } // insert the new rendition\n\n              mediaGroup[entry.attributes.NAME] = rendition;\n            },\n            discontinuity: function discontinuity() {\n              currentTimeline += 1;\n              currentUri.discontinuity = true;\n              this.manifest.discontinuityStarts.push(uris.length);\n            },\n            'program-date-time': function programDateTime() {\n              if (typeof this.manifest.dateTimeString === 'undefined') {\n                // PROGRAM-DATE-TIME is a media-segment tag, but for backwards\n                // compatibility, we add the first occurence of the PROGRAM-DATE-TIME tag\n                // to the manifest object\n                // TODO: Consider removing this in future major version\n                this.manifest.dateTimeString = entry.dateTimeString;\n                this.manifest.dateTimeObject = entry.dateTimeObject;\n              }\n              currentUri.dateTimeString = entry.dateTimeString;\n              currentUri.dateTimeObject = entry.dateTimeObject;\n              var lastProgramDateTime = this.lastProgramDateTime;\n              this.lastProgramDateTime = new Date(entry.dateTimeString).getTime(); // We should extrapolate Program Date Time backward only during first program date time occurrence.\n              // Once we have at least one program date time point, we can always extrapolate it forward using lastProgramDateTime reference.\n\n              if (lastProgramDateTime === null) {\n                // Extrapolate Program Date Time backward\n                // Since it is first program date time occurrence we're assuming that\n                // all this.manifest.segments have no program date time info\n                this.manifest.segments.reduceRight(function (programDateTime, segment) {\n                  segment.programDateTime = programDateTime - segment.duration * 1000;\n                  return segment.programDateTime;\n                }, this.lastProgramDateTime);\n              }\n            },\n            targetduration: function targetduration() {\n              if (!isFinite(entry.duration) || entry.duration < 0) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid target duration: ' + entry.duration\n                });\n                return;\n              }\n              this.manifest.targetDuration = entry.duration;\n              setHoldBack.call(this, this.manifest);\n            },\n            start: function start() {\n              if (!entry.attributes || isNaN(entry.attributes['TIME-OFFSET'])) {\n                this.trigger('warn', {\n                  message: 'ignoring start declaration without appropriate attribute list'\n                });\n                return;\n              }\n              this.manifest.start = {\n                timeOffset: entry.attributes['TIME-OFFSET'],\n                precise: entry.attributes.PRECISE\n              };\n            },\n            'cue-out': function cueOut() {\n              currentUri.cueOut = entry.data;\n            },\n            'cue-out-cont': function cueOutCont() {\n              currentUri.cueOutCont = entry.data;\n            },\n            'cue-in': function cueIn() {\n              currentUri.cueIn = entry.data;\n            },\n            'skip': function skip() {\n              this.manifest.skip = camelCaseKeys(entry.attributes);\n              this.warnOnMissingAttributes_('#EXT-X-SKIP', entry.attributes, ['SKIPPED-SEGMENTS']);\n            },\n            'part': function part() {\n              var _this6 = this;\n              hasParts = true; // parts are always specifed before a segment\n\n              var segmentIndex = this.manifest.segments.length;\n              var part = camelCaseKeys(entry.attributes);\n              currentUri.parts = currentUri.parts || [];\n              currentUri.parts.push(part);\n              if (part.byterange) {\n                if (!part.byterange.hasOwnProperty('offset')) {\n                  part.byterange.offset = lastPartByterangeEnd;\n                }\n                lastPartByterangeEnd = part.byterange.offset + part.byterange.length;\n              }\n              var partIndex = currentUri.parts.length - 1;\n              this.warnOnMissingAttributes_(\"#EXT-X-PART #\".concat(partIndex, \" for segment #\").concat(segmentIndex), entry.attributes, ['URI', 'DURATION']);\n              if (this.manifest.renditionReports) {\n                this.manifest.renditionReports.forEach(function (r, i) {\n                  if (!r.hasOwnProperty('lastPart')) {\n                    _this6.trigger('warn', {\n                      message: \"#EXT-X-RENDITION-REPORT #\".concat(i, \" lacks required attribute(s): LAST-PART\")\n                    });\n                  }\n                });\n              }\n            },\n            'server-control': function serverControl() {\n              var attrs = this.manifest.serverControl = camelCaseKeys(entry.attributes);\n              if (!attrs.hasOwnProperty('canBlockReload')) {\n                attrs.canBlockReload = false;\n                this.trigger('info', {\n                  message: '#EXT-X-SERVER-CONTROL defaulting CAN-BLOCK-RELOAD to false'\n                });\n              }\n              setHoldBack.call(this, this.manifest);\n              if (attrs.canSkipDateranges && !attrs.hasOwnProperty('canSkipUntil')) {\n                this.trigger('warn', {\n                  message: '#EXT-X-SERVER-CONTROL lacks required attribute CAN-SKIP-UNTIL which is required when CAN-SKIP-DATERANGES is set'\n                });\n              }\n            },\n            'preload-hint': function preloadHint() {\n              // parts are always specifed before a segment\n              var segmentIndex = this.manifest.segments.length;\n              var hint = camelCaseKeys(entry.attributes);\n              var isPart = hint.type && hint.type === 'PART';\n              currentUri.preloadHints = currentUri.preloadHints || [];\n              currentUri.preloadHints.push(hint);\n              if (hint.byterange) {\n                if (!hint.byterange.hasOwnProperty('offset')) {\n                  // use last part byterange end or zero if not a part.\n                  hint.byterange.offset = isPart ? lastPartByterangeEnd : 0;\n                  if (isPart) {\n                    lastPartByterangeEnd = hint.byterange.offset + hint.byterange.length;\n                  }\n                }\n              }\n              var index = currentUri.preloadHints.length - 1;\n              this.warnOnMissingAttributes_(\"#EXT-X-PRELOAD-HINT #\".concat(index, \" for segment #\").concat(segmentIndex), entry.attributes, ['TYPE', 'URI']);\n              if (!hint.type) {\n                return;\n              } // search through all preload hints except for the current one for\n              // a duplicate type.\n\n              for (var i = 0; i < currentUri.preloadHints.length - 1; i++) {\n                var otherHint = currentUri.preloadHints[i];\n                if (!otherHint.type) {\n                  continue;\n                }\n                if (otherHint.type === hint.type) {\n                  this.trigger('warn', {\n                    message: \"#EXT-X-PRELOAD-HINT #\".concat(index, \" for segment #\").concat(segmentIndex, \" has the same TYPE \").concat(hint.type, \" as preload hint #\").concat(i)\n                  });\n                }\n              }\n            },\n            'rendition-report': function renditionReport() {\n              var report = camelCaseKeys(entry.attributes);\n              this.manifest.renditionReports = this.manifest.renditionReports || [];\n              this.manifest.renditionReports.push(report);\n              var index = this.manifest.renditionReports.length - 1;\n              var required = ['LAST-MSN', 'URI'];\n              if (hasParts) {\n                required.push('LAST-PART');\n              }\n              this.warnOnMissingAttributes_(\"#EXT-X-RENDITION-REPORT #\".concat(index), entry.attributes, required);\n            },\n            'part-inf': function partInf() {\n              this.manifest.partInf = camelCaseKeys(entry.attributes);\n              this.warnOnMissingAttributes_('#EXT-X-PART-INF', entry.attributes, ['PART-TARGET']);\n              if (this.manifest.partInf.partTarget) {\n                this.manifest.partTargetDuration = this.manifest.partInf.partTarget;\n              }\n              setHoldBack.call(this, this.manifest);\n            },\n            'daterange': function daterange() {\n              this.manifest.dateRanges.push(camelCaseKeys(entry.attributes));\n              var index = this.manifest.dateRanges.length - 1;\n              this.warnOnMissingAttributes_(\"#EXT-X-DATERANGE #\".concat(index), entry.attributes, ['ID', 'START-DATE']);\n              var dateRange = this.manifest.dateRanges[index];\n              if (dateRange.endDate && dateRange.startDate && new Date(dateRange.endDate) < new Date(dateRange.startDate)) {\n                this.trigger('warn', {\n                  message: 'EXT-X-DATERANGE END-DATE must be equal to or later than the value of the START-DATE'\n                });\n              }\n              if (dateRange.duration && dateRange.duration < 0) {\n                this.trigger('warn', {\n                  message: 'EXT-X-DATERANGE DURATION must not be negative'\n                });\n              }\n              if (dateRange.plannedDuration && dateRange.plannedDuration < 0) {\n                this.trigger('warn', {\n                  message: 'EXT-X-DATERANGE PLANNED-DURATION must not be negative'\n                });\n              }\n              var endOnNextYes = !!dateRange.endOnNext;\n              if (endOnNextYes && !dateRange.class) {\n                this.trigger('warn', {\n                  message: 'EXT-X-DATERANGE with an END-ON-NEXT=YES attribute must have a CLASS attribute'\n                });\n              }\n              if (endOnNextYes && (dateRange.duration || dateRange.endDate)) {\n                this.trigger('warn', {\n                  message: 'EXT-X-DATERANGE with an END-ON-NEXT=YES attribute must not contain DURATION or END-DATE attributes'\n                });\n              }\n              if (dateRange.duration && dateRange.endDate) {\n                var startDate = dateRange.startDate;\n                var newDateInSeconds = startDate.getTime() + dateRange.duration * 1000;\n                this.manifest.dateRanges[index].endDate = new Date(newDateInSeconds);\n              }\n              if (!dateRangeTags[dateRange.id]) {\n                dateRangeTags[dateRange.id] = dateRange;\n              } else {\n                for (var attribute in dateRangeTags[dateRange.id]) {\n                  if (!!dateRange[attribute] && JSON.stringify(dateRangeTags[dateRange.id][attribute]) !== JSON.stringify(dateRange[attribute])) {\n                    this.trigger('warn', {\n                      message: 'EXT-X-DATERANGE tags with the same ID in a playlist must have the same attributes values'\n                    });\n                    break;\n                  }\n                } // if tags with the same ID do not have conflicting attributes, merge them\n\n                var dateRangeWithSameId = this.manifest.dateRanges.findIndex(function (dateRangeToFind) {\n                  return dateRangeToFind.id === dateRange.id;\n                });\n                this.manifest.dateRanges[dateRangeWithSameId] = _extends(this.manifest.dateRanges[dateRangeWithSameId], dateRange);\n                dateRangeTags[dateRange.id] = _extends(dateRangeTags[dateRange.id], dateRange); // after merging, delete the duplicate dateRange that was added last\n\n                this.manifest.dateRanges.pop();\n              }\n            },\n            'independent-segments': function independentSegments() {\n              this.manifest.independentSegments = true;\n            },\n            'content-steering': function contentSteering() {\n              this.manifest.contentSteering = camelCaseKeys(entry.attributes);\n              this.warnOnMissingAttributes_('#EXT-X-CONTENT-STEERING', entry.attributes, ['SERVER-URI']);\n            }\n          })[entry.tagType] || noop).call(self);\n        },\n        uri: function uri() {\n          currentUri.uri = entry.uri;\n          uris.push(currentUri); // if no explicit duration was declared, use the target duration\n\n          if (this.manifest.targetDuration && !('duration' in currentUri)) {\n            this.trigger('warn', {\n              message: 'defaulting segment duration to the target duration'\n            });\n            currentUri.duration = this.manifest.targetDuration;\n          } // annotate with encryption information, if necessary\n\n          if (_key) {\n            currentUri.key = _key;\n          }\n          currentUri.timeline = currentTimeline; // annotate with initialization segment information, if necessary\n\n          if (currentMap) {\n            currentUri.map = currentMap;\n          } // reset the last byterange end as it needs to be 0 between parts\n\n          lastPartByterangeEnd = 0; // Once we have at least one program date time we can always extrapolate it forward\n\n          if (this.lastProgramDateTime !== null) {\n            currentUri.programDateTime = this.lastProgramDateTime;\n            this.lastProgramDateTime += currentUri.duration * 1000;\n          } // prepare for the next URI\n\n          currentUri = {};\n        },\n        comment: function comment() {// comments are not important for playback\n        },\n        custom: function custom() {\n          // if this is segment-level data attach the output to the segment\n          if (entry.segment) {\n            currentUri.custom = currentUri.custom || {};\n            currentUri.custom[entry.customType] = entry.data; // if this is manifest-level data attach to the top level manifest object\n          } else {\n            this.manifest.custom = this.manifest.custom || {};\n            this.manifest.custom[entry.customType] = entry.data;\n          }\n        }\n      })[entry.type].call(self);\n    });\n    return _this5;\n  }\n  _createClass(Parser, [{\n    key: \"warnOnMissingAttributes_\",\n    value: function warnOnMissingAttributes_(identifier, attributes, required) {\n      var missing = [];\n      required.forEach(function (key) {\n        if (!attributes.hasOwnProperty(key)) {\n          missing.push(key);\n        }\n      });\n      if (missing.length) {\n        this.trigger('warn', {\n          message: \"\".concat(identifier, \" lacks required attribute(s): \").concat(missing.join(', '))\n        });\n      }\n    }\n    /**\n     * Parse the input string and update the manifest object.\n     *\n     * @param {string} chunk a potentially incomplete portion of the manifest\n     */\n  }, {\n    key: \"push\",\n    value: function push(chunk) {\n      this.lineStream.push(chunk);\n    }\n    /**\n     * Flush any remaining input. This can be handy if the last line of an M3U8\n     * manifest did not contain a trailing newline but the file has been\n     * completely received.\n     */\n  }, {\n    key: \"end\",\n    value: function end() {\n      // flush any buffered input\n      this.lineStream.push('\\n');\n      if (this.manifest.dateRanges.length && this.lastProgramDateTime === null) {\n        this.trigger('warn', {\n          message: 'A playlist with EXT-X-DATERANGE tag must contain atleast one EXT-X-PROGRAM-DATE-TIME tag'\n        });\n      }\n      this.lastProgramDateTime = null;\n      this.trigger('end');\n    }\n    /**\n     * Add an additional parser for non-standard tags\n     *\n     * @param {Object}   options              a map of options for the added parser\n     * @param {RegExp}   options.expression   a regular expression to match the custom header\n     * @param {string}   options.customType   the custom type to register to the output\n     * @param {Function} [options.dataParser] function to parse the line into an object\n     * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n     */\n  }, {\n    key: \"addParser\",\n    value: function addParser(options) {\n      this.parseStream.addParser(options);\n    }\n    /**\n     * Add a custom header mapper\n     *\n     * @param {Object}   options\n     * @param {RegExp}   options.expression   a regular expression to match the custom header\n     * @param {Function} options.map          function to translate tag into a different tag\n     */\n  }, {\n    key: \"addTagMapper\",\n    value: function addTagMapper(options) {\n      this.parseStream.addTagMapper(options);\n    }\n  }]);\n  return Parser;\n}(Stream);\nexport { LineStream, ParseStream, Parser };","map":{"version":3,"names":["Stream","_extends","decodeB64ToUint8Array","LineStream","_Stream","_inherits","_super","_createSuper","_this","_classCallCheck","call","buffer","_createClass","key","value","push","data","nextNewline","indexOf","trigger","substring","TAB","String","fromCharCode","parseByterange","byterangeString","match","exec","result","length","parseInt","offset","attributeSeparator","keyvalue","RegExp","parseAttributes","attributes","attrs","split","i","attr","slice","replace","ParseStream","_Stream2","_super2","_this2","customParsers","tagMappers","line","_this3","event","trim","type","uri","newLines","reduce","acc","mapper","mappedLine","concat","forEach","newLine","text","tagType","duration","parseFloat","title","version","number","playlistType","allowed","test","URI","BYTERANGE","byterange","RESOLUTION","resolution","width","height","BANDWIDTH","dateTimeString","dateTimeObject","Date","IV","toLowerCase","Uint32Array","PRECISE","hasOwnProperty","subkey","toString","clientAttributePattern","isHexaDecimal","isDecimalFloating","addParser","_ref","_this4","expression","customType","dataParser","segment","addTagMapper","_ref2","map","mapFn","camelCase","str","a","toUpperCase","camelCaseKeys","Object","keys","setHoldBack","manifest","serverControl","targetDuration","partTargetDuration","tag","hb","phb","minTargetDuration","minPartDuration","message","Parser","_Stream3","_super3","_this5","lineStream","parseStream","pipe","lastProgramDateTime","self","_assertThisInitialized","uris","currentUri","currentMap","hasParts","noop","defaultMediaGroups","widevineUuid","currentTimeline","allowCache","discontinuityStarts","dateRanges","segments","lastByterangeEnd","lastPartByterangeEnd","dateRangeTags","on","parts","preloadHints","timeline","preloadSegment","entry","mediaGroup","rendition","endlist","endList","inf","mediaSequence","discontinuitySequence","METHOD","KEYFORMAT","contentProtection","VALID_METHODS","KEYID","schemeIdUri","keyId","pssh","method","iv","isFinite","playlist","streamInf","playlists","mediaGroups","media","TYPE","NAME","mediaGroupType","default","DEFAULT","autoselect","AUTOSELECT","LANGUAGE","language","instreamId","CHARACTERISTICS","characteristics","FORCED","forced","discontinuity","programDateTime","getTime","reduceRight","targetduration","start","isNaN","timeOffset","precise","cueOut","cueOutCont","cueIn","skip","warnOnMissingAttributes_","part","_this6","segmentIndex","partIndex","renditionReports","r","canBlockReload","canSkipDateranges","preloadHint","hint","isPart","index","otherHint","renditionReport","report","required","partInf","partTarget","daterange","dateRange","endDate","startDate","plannedDuration","endOnNextYes","endOnNext","class","newDateInSeconds","id","attribute","JSON","stringify","dateRangeWithSameId","findIndex","dateRangeToFind","pop","independentSegments","contentSteering","comment","custom","identifier","missing","join","chunk","end","options"],"sources":["C:/Users/hp/Downloads/video_player_uploader-master/backend/frontend-app/node_modules/m3u8-parser/dist/m3u8-parser.es.js"],"sourcesContent":["/*! @name m3u8-parser @version 7.1.0 @license Apache-2.0 */\nimport Stream from '@videojs/vhs-utils/es/stream.js';\nimport _extends from '@babel/runtime/helpers/extends';\nimport decodeB64ToUint8Array from '@videojs/vhs-utils/es/decode-b64-to-uint8-array.js';\n\n/**\n * @file m3u8/line-stream.js\n */\n/**\n * A stream that buffers string input and generates a `data` event for each\n * line.\n *\n * @class LineStream\n * @extends Stream\n */\n\nclass LineStream extends Stream {\n  constructor() {\n    super();\n    this.buffer = '';\n  }\n  /**\n   * Add new data to be parsed.\n   *\n   * @param {string} data the text to process\n   */\n\n\n  push(data) {\n    let nextNewline;\n    this.buffer += data;\n    nextNewline = this.buffer.indexOf('\\n');\n\n    for (; nextNewline > -1; nextNewline = this.buffer.indexOf('\\n')) {\n      this.trigger('data', this.buffer.substring(0, nextNewline));\n      this.buffer = this.buffer.substring(nextNewline + 1);\n    }\n  }\n\n}\n\nconst TAB = String.fromCharCode(0x09);\n\nconst parseByterange = function (byterangeString) {\n  // optionally match and capture 0+ digits before `@`\n  // optionally match and capture 0+ digits after `@`\n  const match = /([0-9.]*)?@?([0-9.]*)?/.exec(byterangeString || '');\n  const result = {};\n\n  if (match[1]) {\n    result.length = parseInt(match[1], 10);\n  }\n\n  if (match[2]) {\n    result.offset = parseInt(match[2], 10);\n  }\n\n  return result;\n};\n/**\n * \"forgiving\" attribute list psuedo-grammar:\n * attributes -> keyvalue (',' keyvalue)*\n * keyvalue   -> key '=' value\n * key        -> [^=]*\n * value      -> '\"' [^\"]* '\"' | [^,]*\n */\n\n\nconst attributeSeparator = function () {\n  const key = '[^=]*';\n  const value = '\"[^\"]*\"|[^,]*';\n  const keyvalue = '(?:' + key + ')=(?:' + value + ')';\n  return new RegExp('(?:^|,)(' + keyvalue + ')');\n};\n/**\n * Parse attributes from a line given the separator\n *\n * @param {string} attributes the attribute line to parse\n */\n\n\nconst parseAttributes = function (attributes) {\n  const result = {};\n\n  if (!attributes) {\n    return result;\n  } // split the string using attributes as the separator\n\n\n  const attrs = attributes.split(attributeSeparator());\n  let i = attrs.length;\n  let attr;\n\n  while (i--) {\n    // filter out unmatched portions of the string\n    if (attrs[i] === '') {\n      continue;\n    } // split the key and value\n\n\n    attr = /([^=]*)=(.*)/.exec(attrs[i]).slice(1); // trim whitespace and remove optional quotes around the value\n\n    attr[0] = attr[0].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^['\"](.*)['\"]$/g, '$1');\n    result[attr[0]] = attr[1];\n  }\n\n  return result;\n};\n/**\n * A line-level M3U8 parser event stream. It expects to receive input one\n * line at a time and performs a context-free parse of its contents. A stream\n * interpretation of a manifest can be useful if the manifest is expected to\n * be too large to fit comfortably into memory or the entirety of the input\n * is not immediately available. Otherwise, it's probably much easier to work\n * with a regular `Parser` object.\n *\n * Produces `data` events with an object that captures the parser's\n * interpretation of the input. That object has a property `tag` that is one\n * of `uri`, `comment`, or `tag`. URIs only have a single additional\n * property, `line`, which captures the entirety of the input without\n * interpretation. Comments similarly have a single additional property\n * `text` which is the input without the leading `#`.\n *\n * Tags always have a property `tagType` which is the lower-cased version of\n * the M3U8 directive without the `#EXT` or `#EXT-X-` prefix. For instance,\n * `#EXT-X-MEDIA-SEQUENCE` becomes `media-sequence` when parsed. Unrecognized\n * tags are given the tag type `unknown` and a single additional property\n * `data` with the remainder of the input.\n *\n * @class ParseStream\n * @extends Stream\n */\n\n\nclass ParseStream extends Stream {\n  constructor() {\n    super();\n    this.customParsers = [];\n    this.tagMappers = [];\n  }\n  /**\n   * Parses an additional line of input.\n   *\n   * @param {string} line a single line of an M3U8 file to parse\n   */\n\n\n  push(line) {\n    let match;\n    let event; // strip whitespace\n\n    line = line.trim();\n\n    if (line.length === 0) {\n      // ignore empty lines\n      return;\n    } // URIs\n\n\n    if (line[0] !== '#') {\n      this.trigger('data', {\n        type: 'uri',\n        uri: line\n      });\n      return;\n    } // map tags\n\n\n    const newLines = this.tagMappers.reduce((acc, mapper) => {\n      const mappedLine = mapper(line); // skip if unchanged\n\n      if (mappedLine === line) {\n        return acc;\n      }\n\n      return acc.concat([mappedLine]);\n    }, [line]);\n    newLines.forEach(newLine => {\n      for (let i = 0; i < this.customParsers.length; i++) {\n        if (this.customParsers[i].call(this, newLine)) {\n          return;\n        }\n      } // Comments\n\n\n      if (newLine.indexOf('#EXT') !== 0) {\n        this.trigger('data', {\n          type: 'comment',\n          text: newLine.slice(1)\n        });\n        return;\n      } // strip off any carriage returns here so the regex matching\n      // doesn't have to account for them.\n\n\n      newLine = newLine.replace('\\r', ''); // Tags\n\n      match = /^#EXTM3U/.exec(newLine);\n\n      if (match) {\n        this.trigger('data', {\n          type: 'tag',\n          tagType: 'm3u'\n        });\n        return;\n      }\n\n      match = /^#EXTINF:([0-9\\.]*)?,?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'inf'\n        };\n\n        if (match[1]) {\n          event.duration = parseFloat(match[1]);\n        }\n\n        if (match[2]) {\n          event.title = match[2];\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-TARGETDURATION:([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'targetduration'\n        };\n\n        if (match[1]) {\n          event.duration = parseInt(match[1], 10);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-VERSION:([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'version'\n        };\n\n        if (match[1]) {\n          event.version = parseInt(match[1], 10);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-MEDIA-SEQUENCE:(\\-?[0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'media-sequence'\n        };\n\n        if (match[1]) {\n          event.number = parseInt(match[1], 10);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-DISCONTINUITY-SEQUENCE:(\\-?[0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'discontinuity-sequence'\n        };\n\n        if (match[1]) {\n          event.number = parseInt(match[1], 10);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-PLAYLIST-TYPE:(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'playlist-type'\n        };\n\n        if (match[1]) {\n          event.playlistType = match[1];\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-BYTERANGE:(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = _extends(parseByterange(match[1]), {\n          type: 'tag',\n          tagType: 'byterange'\n        });\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-ALLOW-CACHE:(YES|NO)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'allow-cache'\n        };\n\n        if (match[1]) {\n          event.allowed = !/NO/.test(match[1]);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-MAP:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'map'\n        };\n\n        if (match[1]) {\n          const attributes = parseAttributes(match[1]);\n\n          if (attributes.URI) {\n            event.uri = attributes.URI;\n          }\n\n          if (attributes.BYTERANGE) {\n            event.byterange = parseByterange(attributes.BYTERANGE);\n          }\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-STREAM-INF:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'stream-inf'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n\n          if (event.attributes.RESOLUTION) {\n            const split = event.attributes.RESOLUTION.split('x');\n            const resolution = {};\n\n            if (split[0]) {\n              resolution.width = parseInt(split[0], 10);\n            }\n\n            if (split[1]) {\n              resolution.height = parseInt(split[1], 10);\n            }\n\n            event.attributes.RESOLUTION = resolution;\n          }\n\n          if (event.attributes.BANDWIDTH) {\n            event.attributes.BANDWIDTH = parseInt(event.attributes.BANDWIDTH, 10);\n          }\n\n          if (event.attributes['FRAME-RATE']) {\n            event.attributes['FRAME-RATE'] = parseFloat(event.attributes['FRAME-RATE']);\n          }\n\n          if (event.attributes['PROGRAM-ID']) {\n            event.attributes['PROGRAM-ID'] = parseInt(event.attributes['PROGRAM-ID'], 10);\n          }\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-MEDIA:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'media'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-ENDLIST/.exec(newLine);\n\n      if (match) {\n        this.trigger('data', {\n          type: 'tag',\n          tagType: 'endlist'\n        });\n        return;\n      }\n\n      match = /^#EXT-X-DISCONTINUITY/.exec(newLine);\n\n      if (match) {\n        this.trigger('data', {\n          type: 'tag',\n          tagType: 'discontinuity'\n        });\n        return;\n      }\n\n      match = /^#EXT-X-PROGRAM-DATE-TIME:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'program-date-time'\n        };\n\n        if (match[1]) {\n          event.dateTimeString = match[1];\n          event.dateTimeObject = new Date(match[1]);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-KEY:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'key'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]); // parse the IV string into a Uint32Array\n\n          if (event.attributes.IV) {\n            if (event.attributes.IV.substring(0, 2).toLowerCase() === '0x') {\n              event.attributes.IV = event.attributes.IV.substring(2);\n            }\n\n            event.attributes.IV = event.attributes.IV.match(/.{8}/g);\n            event.attributes.IV[0] = parseInt(event.attributes.IV[0], 16);\n            event.attributes.IV[1] = parseInt(event.attributes.IV[1], 16);\n            event.attributes.IV[2] = parseInt(event.attributes.IV[2], 16);\n            event.attributes.IV[3] = parseInt(event.attributes.IV[3], 16);\n            event.attributes.IV = new Uint32Array(event.attributes.IV);\n          }\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-START:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'start'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n          event.attributes['TIME-OFFSET'] = parseFloat(event.attributes['TIME-OFFSET']);\n          event.attributes.PRECISE = /YES/.test(event.attributes.PRECISE);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-CUE-OUT-CONT:(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-out-cont'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-CUE-OUT:(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-out'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-CUE-IN:(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-in'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-SKIP:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'skip'\n        };\n        event.attributes = parseAttributes(match[1]);\n\n        if (event.attributes.hasOwnProperty('SKIPPED-SEGMENTS')) {\n          event.attributes['SKIPPED-SEGMENTS'] = parseInt(event.attributes['SKIPPED-SEGMENTS'], 10);\n        }\n\n        if (event.attributes.hasOwnProperty('RECENTLY-REMOVED-DATERANGES')) {\n          event.attributes['RECENTLY-REMOVED-DATERANGES'] = event.attributes['RECENTLY-REMOVED-DATERANGES'].split(TAB);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-PART:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'part'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['DURATION'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseFloat(event.attributes[key]);\n          }\n        });\n        ['INDEPENDENT', 'GAP'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = /YES/.test(event.attributes[key]);\n          }\n        });\n\n        if (event.attributes.hasOwnProperty('BYTERANGE')) {\n          event.attributes.byterange = parseByterange(event.attributes.BYTERANGE);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-SERVER-CONTROL:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'server-control'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['CAN-SKIP-UNTIL', 'PART-HOLD-BACK', 'HOLD-BACK'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseFloat(event.attributes[key]);\n          }\n        });\n        ['CAN-SKIP-DATERANGES', 'CAN-BLOCK-RELOAD'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = /YES/.test(event.attributes[key]);\n          }\n        });\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-PART-INF:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'part-inf'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['PART-TARGET'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseFloat(event.attributes[key]);\n          }\n        });\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-PRELOAD-HINT:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'preload-hint'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['BYTERANGE-START', 'BYTERANGE-LENGTH'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseInt(event.attributes[key], 10);\n            const subkey = key === 'BYTERANGE-LENGTH' ? 'length' : 'offset';\n            event.attributes.byterange = event.attributes.byterange || {};\n            event.attributes.byterange[subkey] = event.attributes[key]; // only keep the parsed byterange object.\n\n            delete event.attributes[key];\n          }\n        });\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-RENDITION-REPORT:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'rendition-report'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['LAST-MSN', 'LAST-PART'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseInt(event.attributes[key], 10);\n          }\n        });\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-DATERANGE:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'daterange'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['ID', 'CLASS'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = String(event.attributes[key]);\n          }\n        });\n        ['START-DATE', 'END-DATE'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = new Date(event.attributes[key]);\n          }\n        });\n        ['DURATION', 'PLANNED-DURATION'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseFloat(event.attributes[key]);\n          }\n        });\n        ['END-ON-NEXT'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = /YES/i.test(event.attributes[key]);\n          }\n        });\n        ['SCTE35-CMD', ' SCTE35-OUT', 'SCTE35-IN'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = event.attributes[key].toString(16);\n          }\n        });\n        const clientAttributePattern = /^X-([A-Z]+-)+[A-Z]+$/;\n\n        for (const key in event.attributes) {\n          if (!clientAttributePattern.test(key)) {\n            continue;\n          }\n\n          const isHexaDecimal = /[0-9A-Fa-f]{6}/g.test(event.attributes[key]);\n          const isDecimalFloating = /^\\d+(\\.\\d+)?$/.test(event.attributes[key]);\n          event.attributes[key] = isHexaDecimal ? event.attributes[key].toString(16) : isDecimalFloating ? parseFloat(event.attributes[key]) : String(event.attributes[key]);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-INDEPENDENT-SEGMENTS/.exec(newLine);\n\n      if (match) {\n        this.trigger('data', {\n          type: 'tag',\n          tagType: 'independent-segments'\n        });\n        return;\n      }\n\n      match = /^#EXT-X-CONTENT-STEERING:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'content-steering'\n        };\n        event.attributes = parseAttributes(match[1]);\n        this.trigger('data', event);\n        return;\n      } // unknown tag type\n\n\n      this.trigger('data', {\n        type: 'tag',\n        data: newLine.slice(4)\n      });\n    });\n  }\n  /**\n   * Add a parser for custom headers\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.customType   the custom type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n\n\n  addParser({\n    expression,\n    customType,\n    dataParser,\n    segment\n  }) {\n    if (typeof dataParser !== 'function') {\n      dataParser = line => line;\n    }\n\n    this.customParsers.push(line => {\n      const match = expression.exec(line);\n\n      if (match) {\n        this.trigger('data', {\n          type: 'custom',\n          data: dataParser(line),\n          customType,\n          segment\n        });\n        return true;\n      }\n    });\n  }\n  /**\n   * Add a custom header mapper\n   *\n   * @param {Object}   options\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {Function} options.map          function to translate tag into a different tag\n   */\n\n\n  addTagMapper({\n    expression,\n    map\n  }) {\n    const mapFn = line => {\n      if (expression.test(line)) {\n        return map(line);\n      }\n\n      return line;\n    };\n\n    this.tagMappers.push(mapFn);\n  }\n\n}\n\nconst camelCase = str => str.toLowerCase().replace(/-(\\w)/g, a => a[1].toUpperCase());\n\nconst camelCaseKeys = function (attributes) {\n  const result = {};\n  Object.keys(attributes).forEach(function (key) {\n    result[camelCase(key)] = attributes[key];\n  });\n  return result;\n}; // set SERVER-CONTROL hold back based upon targetDuration and partTargetDuration\n// we need this helper because defaults are based upon targetDuration and\n// partTargetDuration being set, but they may not be if SERVER-CONTROL appears before\n// target durations are set.\n\n\nconst setHoldBack = function (manifest) {\n  const {\n    serverControl,\n    targetDuration,\n    partTargetDuration\n  } = manifest;\n\n  if (!serverControl) {\n    return;\n  }\n\n  const tag = '#EXT-X-SERVER-CONTROL';\n  const hb = 'holdBack';\n  const phb = 'partHoldBack';\n  const minTargetDuration = targetDuration && targetDuration * 3;\n  const minPartDuration = partTargetDuration && partTargetDuration * 2;\n\n  if (targetDuration && !serverControl.hasOwnProperty(hb)) {\n    serverControl[hb] = minTargetDuration;\n    this.trigger('info', {\n      message: `${tag} defaulting HOLD-BACK to targetDuration * 3 (${minTargetDuration}).`\n    });\n  }\n\n  if (minTargetDuration && serverControl[hb] < minTargetDuration) {\n    this.trigger('warn', {\n      message: `${tag} clamping HOLD-BACK (${serverControl[hb]}) to targetDuration * 3 (${minTargetDuration})`\n    });\n    serverControl[hb] = minTargetDuration;\n  } // default no part hold back to part target duration * 3\n\n\n  if (partTargetDuration && !serverControl.hasOwnProperty(phb)) {\n    serverControl[phb] = partTargetDuration * 3;\n    this.trigger('info', {\n      message: `${tag} defaulting PART-HOLD-BACK to partTargetDuration * 3 (${serverControl[phb]}).`\n    });\n  } // if part hold back is too small default it to part target duration * 2\n\n\n  if (partTargetDuration && serverControl[phb] < minPartDuration) {\n    this.trigger('warn', {\n      message: `${tag} clamping PART-HOLD-BACK (${serverControl[phb]}) to partTargetDuration * 2 (${minPartDuration}).`\n    });\n    serverControl[phb] = minPartDuration;\n  }\n};\n/**\n * A parser for M3U8 files. The current interpretation of the input is\n * exposed as a property `manifest` on parser objects. It's just two lines to\n * create and parse a manifest once you have the contents available as a string:\n *\n * ```js\n * var parser = new m3u8.Parser();\n * parser.push(xhr.responseText);\n * ```\n *\n * New input can later be applied to update the manifest object by calling\n * `push` again.\n *\n * The parser attempts to create a usable manifest object even if the\n * underlying input is somewhat nonsensical. It emits `info` and `warning`\n * events during the parse if it encounters input that seems invalid or\n * requires some property of the manifest object to be defaulted.\n *\n * @class Parser\n * @extends Stream\n */\n\n\nclass Parser extends Stream {\n  constructor() {\n    super();\n    this.lineStream = new LineStream();\n    this.parseStream = new ParseStream();\n    this.lineStream.pipe(this.parseStream);\n    this.lastProgramDateTime = null;\n    /* eslint-disable consistent-this */\n\n    const self = this;\n    /* eslint-enable consistent-this */\n\n    const uris = [];\n    let currentUri = {}; // if specified, the active EXT-X-MAP definition\n\n    let currentMap; // if specified, the active decryption key\n\n    let key;\n    let hasParts = false;\n\n    const noop = function () {};\n\n    const defaultMediaGroups = {\n      'AUDIO': {},\n      'VIDEO': {},\n      'CLOSED-CAPTIONS': {},\n      'SUBTITLES': {}\n    }; // This is the Widevine UUID from DASH IF IOP. The same exact string is\n    // used in MPDs with Widevine encrypted streams.\n\n    const widevineUuid = 'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed'; // group segments into numbered timelines delineated by discontinuities\n\n    let currentTimeline = 0; // the manifest is empty until the parse stream begins delivering data\n\n    this.manifest = {\n      allowCache: true,\n      discontinuityStarts: [],\n      dateRanges: [],\n      segments: []\n    }; // keep track of the last seen segment's byte range end, as segments are not required\n    // to provide the offset, in which case it defaults to the next byte after the\n    // previous segment\n\n    let lastByterangeEnd = 0; // keep track of the last seen part's byte range end.\n\n    let lastPartByterangeEnd = 0;\n    const dateRangeTags = {};\n    this.on('end', () => {\n      // only add preloadSegment if we don't yet have a uri for it.\n      // and we actually have parts/preloadHints\n      if (currentUri.uri || !currentUri.parts && !currentUri.preloadHints) {\n        return;\n      }\n\n      if (!currentUri.map && currentMap) {\n        currentUri.map = currentMap;\n      }\n\n      if (!currentUri.key && key) {\n        currentUri.key = key;\n      }\n\n      if (!currentUri.timeline && typeof currentTimeline === 'number') {\n        currentUri.timeline = currentTimeline;\n      }\n\n      this.manifest.preloadSegment = currentUri;\n    }); // update the manifest with the m3u8 entry from the parse stream\n\n    this.parseStream.on('data', function (entry) {\n      let mediaGroup;\n      let rendition;\n      ({\n        tag() {\n          // switch based on the tag type\n          (({\n            version() {\n              if (entry.version) {\n                this.manifest.version = entry.version;\n              }\n            },\n\n            'allow-cache'() {\n              this.manifest.allowCache = entry.allowed;\n\n              if (!('allowed' in entry)) {\n                this.trigger('info', {\n                  message: 'defaulting allowCache to YES'\n                });\n                this.manifest.allowCache = true;\n              }\n            },\n\n            byterange() {\n              const byterange = {};\n\n              if ('length' in entry) {\n                currentUri.byterange = byterange;\n                byterange.length = entry.length;\n\n                if (!('offset' in entry)) {\n                  /*\n                   * From the latest spec (as of this writing):\n                   * https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.2.2\n                   *\n                   * Same text since EXT-X-BYTERANGE's introduction in draft 7:\n                   * https://tools.ietf.org/html/draft-pantos-http-live-streaming-07#section-3.3.1)\n                   *\n                   * \"If o [offset] is not present, the sub-range begins at the next byte\n                   * following the sub-range of the previous media segment.\"\n                   */\n                  entry.offset = lastByterangeEnd;\n                }\n              }\n\n              if ('offset' in entry) {\n                currentUri.byterange = byterange;\n                byterange.offset = entry.offset;\n              }\n\n              lastByterangeEnd = byterange.offset + byterange.length;\n            },\n\n            endlist() {\n              this.manifest.endList = true;\n            },\n\n            inf() {\n              if (!('mediaSequence' in this.manifest)) {\n                this.manifest.mediaSequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting media sequence to zero'\n                });\n              }\n\n              if (!('discontinuitySequence' in this.manifest)) {\n                this.manifest.discontinuitySequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting discontinuity sequence to zero'\n                });\n              }\n\n              if (entry.title) {\n                currentUri.title = entry.title;\n              }\n\n              if (entry.duration > 0) {\n                currentUri.duration = entry.duration;\n              }\n\n              if (entry.duration === 0) {\n                currentUri.duration = 0.01;\n                this.trigger('info', {\n                  message: 'updating zero segment duration to a small value'\n                });\n              }\n\n              this.manifest.segments = uris;\n            },\n\n            key() {\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without attribute list'\n                });\n                return;\n              } // clear the active encryption key\n\n\n              if (entry.attributes.METHOD === 'NONE') {\n                key = null;\n                return;\n              }\n\n              if (!entry.attributes.URI) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without URI'\n                });\n                return;\n              }\n\n              if (entry.attributes.KEYFORMAT === 'com.apple.streamingkeydelivery') {\n                this.manifest.contentProtection = this.manifest.contentProtection || {}; // TODO: add full support for this.\n\n                this.manifest.contentProtection['com.apple.fps.1_0'] = {\n                  attributes: entry.attributes\n                };\n                return;\n              }\n\n              if (entry.attributes.KEYFORMAT === 'com.microsoft.playready') {\n                this.manifest.contentProtection = this.manifest.contentProtection || {}; // TODO: add full support for this.\n\n                this.manifest.contentProtection['com.microsoft.playready'] = {\n                  uri: entry.attributes.URI\n                };\n                return;\n              } // check if the content is encrypted for Widevine\n              // Widevine/HLS spec: https://storage.googleapis.com/wvdocs/Widevine_DRM_HLS.pdf\n\n\n              if (entry.attributes.KEYFORMAT === widevineUuid) {\n                const VALID_METHODS = ['SAMPLE-AES', 'SAMPLE-AES-CTR', 'SAMPLE-AES-CENC'];\n\n                if (VALID_METHODS.indexOf(entry.attributes.METHOD) === -1) {\n                  this.trigger('warn', {\n                    message: 'invalid key method provided for Widevine'\n                  });\n                  return;\n                }\n\n                if (entry.attributes.METHOD === 'SAMPLE-AES-CENC') {\n                  this.trigger('warn', {\n                    message: 'SAMPLE-AES-CENC is deprecated, please use SAMPLE-AES-CTR instead'\n                  });\n                }\n\n                if (entry.attributes.URI.substring(0, 23) !== 'data:text/plain;base64,') {\n                  this.trigger('warn', {\n                    message: 'invalid key URI provided for Widevine'\n                  });\n                  return;\n                }\n\n                if (!(entry.attributes.KEYID && entry.attributes.KEYID.substring(0, 2) === '0x')) {\n                  this.trigger('warn', {\n                    message: 'invalid key ID provided for Widevine'\n                  });\n                  return;\n                } // if Widevine key attributes are valid, store them as `contentProtection`\n                // on the manifest to emulate Widevine tag structure in a DASH mpd\n\n\n                this.manifest.contentProtection = this.manifest.contentProtection || {};\n                this.manifest.contentProtection['com.widevine.alpha'] = {\n                  attributes: {\n                    schemeIdUri: entry.attributes.KEYFORMAT,\n                    // remove '0x' from the key id string\n                    keyId: entry.attributes.KEYID.substring(2)\n                  },\n                  // decode the base64-encoded PSSH box\n                  pssh: decodeB64ToUint8Array(entry.attributes.URI.split(',')[1])\n                };\n                return;\n              }\n\n              if (!entry.attributes.METHOD) {\n                this.trigger('warn', {\n                  message: 'defaulting key method to AES-128'\n                });\n              } // setup an encryption key for upcoming segments\n\n\n              key = {\n                method: entry.attributes.METHOD || 'AES-128',\n                uri: entry.attributes.URI\n              };\n\n              if (typeof entry.attributes.IV !== 'undefined') {\n                key.iv = entry.attributes.IV;\n              }\n            },\n\n            'media-sequence'() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid media sequence: ' + entry.number\n                });\n                return;\n              }\n\n              this.manifest.mediaSequence = entry.number;\n            },\n\n            'discontinuity-sequence'() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid discontinuity sequence: ' + entry.number\n                });\n                return;\n              }\n\n              this.manifest.discontinuitySequence = entry.number;\n              currentTimeline = entry.number;\n            },\n\n            'playlist-type'() {\n              if (!/VOD|EVENT/.test(entry.playlistType)) {\n                this.trigger('warn', {\n                  message: 'ignoring unknown playlist type: ' + entry.playlist\n                });\n                return;\n              }\n\n              this.manifest.playlistType = entry.playlistType;\n            },\n\n            map() {\n              currentMap = {};\n\n              if (entry.uri) {\n                currentMap.uri = entry.uri;\n              }\n\n              if (entry.byterange) {\n                currentMap.byterange = entry.byterange;\n              }\n\n              if (key) {\n                currentMap.key = key;\n              }\n            },\n\n            'stream-inf'() {\n              this.manifest.playlists = uris;\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring empty stream-inf attributes'\n                });\n                return;\n              }\n\n              if (!currentUri.attributes) {\n                currentUri.attributes = {};\n              }\n\n              _extends(currentUri.attributes, entry.attributes);\n            },\n\n            media() {\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!(entry.attributes && entry.attributes.TYPE && entry.attributes['GROUP-ID'] && entry.attributes.NAME)) {\n                this.trigger('warn', {\n                  message: 'ignoring incomplete or missing media group'\n                });\n                return;\n              } // find the media group, creating defaults as necessary\n\n\n              const mediaGroupType = this.manifest.mediaGroups[entry.attributes.TYPE];\n              mediaGroupType[entry.attributes['GROUP-ID']] = mediaGroupType[entry.attributes['GROUP-ID']] || {};\n              mediaGroup = mediaGroupType[entry.attributes['GROUP-ID']]; // collect the rendition metadata\n\n              rendition = {\n                default: /yes/i.test(entry.attributes.DEFAULT)\n              };\n\n              if (rendition.default) {\n                rendition.autoselect = true;\n              } else {\n                rendition.autoselect = /yes/i.test(entry.attributes.AUTOSELECT);\n              }\n\n              if (entry.attributes.LANGUAGE) {\n                rendition.language = entry.attributes.LANGUAGE;\n              }\n\n              if (entry.attributes.URI) {\n                rendition.uri = entry.attributes.URI;\n              }\n\n              if (entry.attributes['INSTREAM-ID']) {\n                rendition.instreamId = entry.attributes['INSTREAM-ID'];\n              }\n\n              if (entry.attributes.CHARACTERISTICS) {\n                rendition.characteristics = entry.attributes.CHARACTERISTICS;\n              }\n\n              if (entry.attributes.FORCED) {\n                rendition.forced = /yes/i.test(entry.attributes.FORCED);\n              } // insert the new rendition\n\n\n              mediaGroup[entry.attributes.NAME] = rendition;\n            },\n\n            discontinuity() {\n              currentTimeline += 1;\n              currentUri.discontinuity = true;\n              this.manifest.discontinuityStarts.push(uris.length);\n            },\n\n            'program-date-time'() {\n              if (typeof this.manifest.dateTimeString === 'undefined') {\n                // PROGRAM-DATE-TIME is a media-segment tag, but for backwards\n                // compatibility, we add the first occurence of the PROGRAM-DATE-TIME tag\n                // to the manifest object\n                // TODO: Consider removing this in future major version\n                this.manifest.dateTimeString = entry.dateTimeString;\n                this.manifest.dateTimeObject = entry.dateTimeObject;\n              }\n\n              currentUri.dateTimeString = entry.dateTimeString;\n              currentUri.dateTimeObject = entry.dateTimeObject;\n              const {\n                lastProgramDateTime\n              } = this;\n              this.lastProgramDateTime = new Date(entry.dateTimeString).getTime(); // We should extrapolate Program Date Time backward only during first program date time occurrence.\n              // Once we have at least one program date time point, we can always extrapolate it forward using lastProgramDateTime reference.\n\n              if (lastProgramDateTime === null) {\n                // Extrapolate Program Date Time backward\n                // Since it is first program date time occurrence we're assuming that\n                // all this.manifest.segments have no program date time info\n                this.manifest.segments.reduceRight((programDateTime, segment) => {\n                  segment.programDateTime = programDateTime - segment.duration * 1000;\n                  return segment.programDateTime;\n                }, this.lastProgramDateTime);\n              }\n            },\n\n            targetduration() {\n              if (!isFinite(entry.duration) || entry.duration < 0) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid target duration: ' + entry.duration\n                });\n                return;\n              }\n\n              this.manifest.targetDuration = entry.duration;\n              setHoldBack.call(this, this.manifest);\n            },\n\n            start() {\n              if (!entry.attributes || isNaN(entry.attributes['TIME-OFFSET'])) {\n                this.trigger('warn', {\n                  message: 'ignoring start declaration without appropriate attribute list'\n                });\n                return;\n              }\n\n              this.manifest.start = {\n                timeOffset: entry.attributes['TIME-OFFSET'],\n                precise: entry.attributes.PRECISE\n              };\n            },\n\n            'cue-out'() {\n              currentUri.cueOut = entry.data;\n            },\n\n            'cue-out-cont'() {\n              currentUri.cueOutCont = entry.data;\n            },\n\n            'cue-in'() {\n              currentUri.cueIn = entry.data;\n            },\n\n            'skip'() {\n              this.manifest.skip = camelCaseKeys(entry.attributes);\n              this.warnOnMissingAttributes_('#EXT-X-SKIP', entry.attributes, ['SKIPPED-SEGMENTS']);\n            },\n\n            'part'() {\n              hasParts = true; // parts are always specifed before a segment\n\n              const segmentIndex = this.manifest.segments.length;\n              const part = camelCaseKeys(entry.attributes);\n              currentUri.parts = currentUri.parts || [];\n              currentUri.parts.push(part);\n\n              if (part.byterange) {\n                if (!part.byterange.hasOwnProperty('offset')) {\n                  part.byterange.offset = lastPartByterangeEnd;\n                }\n\n                lastPartByterangeEnd = part.byterange.offset + part.byterange.length;\n              }\n\n              const partIndex = currentUri.parts.length - 1;\n              this.warnOnMissingAttributes_(`#EXT-X-PART #${partIndex} for segment #${segmentIndex}`, entry.attributes, ['URI', 'DURATION']);\n\n              if (this.manifest.renditionReports) {\n                this.manifest.renditionReports.forEach((r, i) => {\n                  if (!r.hasOwnProperty('lastPart')) {\n                    this.trigger('warn', {\n                      message: `#EXT-X-RENDITION-REPORT #${i} lacks required attribute(s): LAST-PART`\n                    });\n                  }\n                });\n              }\n            },\n\n            'server-control'() {\n              const attrs = this.manifest.serverControl = camelCaseKeys(entry.attributes);\n\n              if (!attrs.hasOwnProperty('canBlockReload')) {\n                attrs.canBlockReload = false;\n                this.trigger('info', {\n                  message: '#EXT-X-SERVER-CONTROL defaulting CAN-BLOCK-RELOAD to false'\n                });\n              }\n\n              setHoldBack.call(this, this.manifest);\n\n              if (attrs.canSkipDateranges && !attrs.hasOwnProperty('canSkipUntil')) {\n                this.trigger('warn', {\n                  message: '#EXT-X-SERVER-CONTROL lacks required attribute CAN-SKIP-UNTIL which is required when CAN-SKIP-DATERANGES is set'\n                });\n              }\n            },\n\n            'preload-hint'() {\n              // parts are always specifed before a segment\n              const segmentIndex = this.manifest.segments.length;\n              const hint = camelCaseKeys(entry.attributes);\n              const isPart = hint.type && hint.type === 'PART';\n              currentUri.preloadHints = currentUri.preloadHints || [];\n              currentUri.preloadHints.push(hint);\n\n              if (hint.byterange) {\n                if (!hint.byterange.hasOwnProperty('offset')) {\n                  // use last part byterange end or zero if not a part.\n                  hint.byterange.offset = isPart ? lastPartByterangeEnd : 0;\n\n                  if (isPart) {\n                    lastPartByterangeEnd = hint.byterange.offset + hint.byterange.length;\n                  }\n                }\n              }\n\n              const index = currentUri.preloadHints.length - 1;\n              this.warnOnMissingAttributes_(`#EXT-X-PRELOAD-HINT #${index} for segment #${segmentIndex}`, entry.attributes, ['TYPE', 'URI']);\n\n              if (!hint.type) {\n                return;\n              } // search through all preload hints except for the current one for\n              // a duplicate type.\n\n\n              for (let i = 0; i < currentUri.preloadHints.length - 1; i++) {\n                const otherHint = currentUri.preloadHints[i];\n\n                if (!otherHint.type) {\n                  continue;\n                }\n\n                if (otherHint.type === hint.type) {\n                  this.trigger('warn', {\n                    message: `#EXT-X-PRELOAD-HINT #${index} for segment #${segmentIndex} has the same TYPE ${hint.type} as preload hint #${i}`\n                  });\n                }\n              }\n            },\n\n            'rendition-report'() {\n              const report = camelCaseKeys(entry.attributes);\n              this.manifest.renditionReports = this.manifest.renditionReports || [];\n              this.manifest.renditionReports.push(report);\n              const index = this.manifest.renditionReports.length - 1;\n              const required = ['LAST-MSN', 'URI'];\n\n              if (hasParts) {\n                required.push('LAST-PART');\n              }\n\n              this.warnOnMissingAttributes_(`#EXT-X-RENDITION-REPORT #${index}`, entry.attributes, required);\n            },\n\n            'part-inf'() {\n              this.manifest.partInf = camelCaseKeys(entry.attributes);\n              this.warnOnMissingAttributes_('#EXT-X-PART-INF', entry.attributes, ['PART-TARGET']);\n\n              if (this.manifest.partInf.partTarget) {\n                this.manifest.partTargetDuration = this.manifest.partInf.partTarget;\n              }\n\n              setHoldBack.call(this, this.manifest);\n            },\n\n            'daterange'() {\n              this.manifest.dateRanges.push(camelCaseKeys(entry.attributes));\n              const index = this.manifest.dateRanges.length - 1;\n              this.warnOnMissingAttributes_(`#EXT-X-DATERANGE #${index}`, entry.attributes, ['ID', 'START-DATE']);\n              const dateRange = this.manifest.dateRanges[index];\n\n              if (dateRange.endDate && dateRange.startDate && new Date(dateRange.endDate) < new Date(dateRange.startDate)) {\n                this.trigger('warn', {\n                  message: 'EXT-X-DATERANGE END-DATE must be equal to or later than the value of the START-DATE'\n                });\n              }\n\n              if (dateRange.duration && dateRange.duration < 0) {\n                this.trigger('warn', {\n                  message: 'EXT-X-DATERANGE DURATION must not be negative'\n                });\n              }\n\n              if (dateRange.plannedDuration && dateRange.plannedDuration < 0) {\n                this.trigger('warn', {\n                  message: 'EXT-X-DATERANGE PLANNED-DURATION must not be negative'\n                });\n              }\n\n              const endOnNextYes = !!dateRange.endOnNext;\n\n              if (endOnNextYes && !dateRange.class) {\n                this.trigger('warn', {\n                  message: 'EXT-X-DATERANGE with an END-ON-NEXT=YES attribute must have a CLASS attribute'\n                });\n              }\n\n              if (endOnNextYes && (dateRange.duration || dateRange.endDate)) {\n                this.trigger('warn', {\n                  message: 'EXT-X-DATERANGE with an END-ON-NEXT=YES attribute must not contain DURATION or END-DATE attributes'\n                });\n              }\n\n              if (dateRange.duration && dateRange.endDate) {\n                const startDate = dateRange.startDate;\n                const newDateInSeconds = startDate.getTime() + dateRange.duration * 1000;\n                this.manifest.dateRanges[index].endDate = new Date(newDateInSeconds);\n              }\n\n              if (!dateRangeTags[dateRange.id]) {\n                dateRangeTags[dateRange.id] = dateRange;\n              } else {\n                for (const attribute in dateRangeTags[dateRange.id]) {\n                  if (!!dateRange[attribute] && JSON.stringify(dateRangeTags[dateRange.id][attribute]) !== JSON.stringify(dateRange[attribute])) {\n                    this.trigger('warn', {\n                      message: 'EXT-X-DATERANGE tags with the same ID in a playlist must have the same attributes values'\n                    });\n                    break;\n                  }\n                } // if tags with the same ID do not have conflicting attributes, merge them\n\n\n                const dateRangeWithSameId = this.manifest.dateRanges.findIndex(dateRangeToFind => dateRangeToFind.id === dateRange.id);\n                this.manifest.dateRanges[dateRangeWithSameId] = _extends(this.manifest.dateRanges[dateRangeWithSameId], dateRange);\n                dateRangeTags[dateRange.id] = _extends(dateRangeTags[dateRange.id], dateRange); // after merging, delete the duplicate dateRange that was added last\n\n                this.manifest.dateRanges.pop();\n              }\n            },\n\n            'independent-segments'() {\n              this.manifest.independentSegments = true;\n            },\n\n            'content-steering'() {\n              this.manifest.contentSteering = camelCaseKeys(entry.attributes);\n              this.warnOnMissingAttributes_('#EXT-X-CONTENT-STEERING', entry.attributes, ['SERVER-URI']);\n            }\n\n          })[entry.tagType] || noop).call(self);\n        },\n\n        uri() {\n          currentUri.uri = entry.uri;\n          uris.push(currentUri); // if no explicit duration was declared, use the target duration\n\n          if (this.manifest.targetDuration && !('duration' in currentUri)) {\n            this.trigger('warn', {\n              message: 'defaulting segment duration to the target duration'\n            });\n            currentUri.duration = this.manifest.targetDuration;\n          } // annotate with encryption information, if necessary\n\n\n          if (key) {\n            currentUri.key = key;\n          }\n\n          currentUri.timeline = currentTimeline; // annotate with initialization segment information, if necessary\n\n          if (currentMap) {\n            currentUri.map = currentMap;\n          } // reset the last byterange end as it needs to be 0 between parts\n\n\n          lastPartByterangeEnd = 0; // Once we have at least one program date time we can always extrapolate it forward\n\n          if (this.lastProgramDateTime !== null) {\n            currentUri.programDateTime = this.lastProgramDateTime;\n            this.lastProgramDateTime += currentUri.duration * 1000;\n          } // prepare for the next URI\n\n\n          currentUri = {};\n        },\n\n        comment() {// comments are not important for playback\n        },\n\n        custom() {\n          // if this is segment-level data attach the output to the segment\n          if (entry.segment) {\n            currentUri.custom = currentUri.custom || {};\n            currentUri.custom[entry.customType] = entry.data; // if this is manifest-level data attach to the top level manifest object\n          } else {\n            this.manifest.custom = this.manifest.custom || {};\n            this.manifest.custom[entry.customType] = entry.data;\n          }\n        }\n\n      })[entry.type].call(self);\n    });\n  }\n\n  warnOnMissingAttributes_(identifier, attributes, required) {\n    const missing = [];\n    required.forEach(function (key) {\n      if (!attributes.hasOwnProperty(key)) {\n        missing.push(key);\n      }\n    });\n\n    if (missing.length) {\n      this.trigger('warn', {\n        message: `${identifier} lacks required attribute(s): ${missing.join(', ')}`\n      });\n    }\n  }\n  /**\n   * Parse the input string and update the manifest object.\n   *\n   * @param {string} chunk a potentially incomplete portion of the manifest\n   */\n\n\n  push(chunk) {\n    this.lineStream.push(chunk);\n  }\n  /**\n   * Flush any remaining input. This can be handy if the last line of an M3U8\n   * manifest did not contain a trailing newline but the file has been\n   * completely received.\n   */\n\n\n  end() {\n    // flush any buffered input\n    this.lineStream.push('\\n');\n\n    if (this.manifest.dateRanges.length && this.lastProgramDateTime === null) {\n      this.trigger('warn', {\n        message: 'A playlist with EXT-X-DATERANGE tag must contain atleast one EXT-X-PROGRAM-DATE-TIME tag'\n      });\n    }\n\n    this.lastProgramDateTime = null;\n    this.trigger('end');\n  }\n  /**\n   * Add an additional parser for non-standard tags\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.customType   the custom type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n\n\n  addParser(options) {\n    this.parseStream.addParser(options);\n  }\n  /**\n   * Add a custom header mapper\n   *\n   * @param {Object}   options\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {Function} options.map          function to translate tag into a different tag\n   */\n\n\n  addTagMapper(options) {\n    this.parseStream.addTagMapper(options);\n  }\n\n}\n\nexport { LineStream, ParseStream, Parser };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}